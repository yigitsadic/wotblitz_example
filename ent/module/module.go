// Code generated by entc, DO NOT EDIT.

package module

import (
	"time"
)

const (
	// Label holds the string label denoting the module type in the database.
	Label = "module"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldModuleType holds the string denoting the moduletype field in the database.
	FieldModuleType = "module_type"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"

	// EdgeTanks holds the string denoting the tanks edge name in mutations.
	EdgeTanks = "tanks"

	// Table holds the table name of the module in the database.
	Table = "modules"
	// TanksTable is the table the holds the tanks relation/edge. The primary key declared below.
	TanksTable = "tank_modules"
	// TanksInverseTable is the table name for the Tank entity.
	// It exists in this package in order to avoid circular dependency with the "tank" package.
	TanksInverseTable = "tanks"
)

// Columns holds all SQL columns for module fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldModuleType,
	FieldCreatedAt,
}

var (
	// TanksPrimaryKey and TanksColumn2 are the table columns denoting the
	// primary key for the tanks relation (M2M).
	TanksPrimaryKey = []string{"tank_id", "module_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// ModuleTypeValidator is a validator for the "moduleType" field. It is called by the builders before save.
	ModuleTypeValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the createdAt field.
	DefaultCreatedAt func() time.Time
)
