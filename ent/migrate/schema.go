// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// ModulesColumns holds the columns for the "modules" table.
	ModulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "module_type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// ModulesTable holds the schema information for the "modules" table.
	ModulesTable = &schema.Table{
		Name:        "modules",
		Columns:     ModulesColumns,
		PrimaryKey:  []*schema.Column{ModulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TanksColumns holds the columns for the "tanks" table.
	TanksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "tier", Type: field.TypeInt},
		{Name: "is_premium", Type: field.TypeBool},
		{Name: "tank_class", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// TanksTable holds the schema information for the "tanks" table.
	TanksTable = &schema.Table{
		Name:        "tanks",
		Columns:     TanksColumns,
		PrimaryKey:  []*schema.Column{TanksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TankNextTanksColumns holds the columns for the "tank_nextTanks" table.
	TankNextTanksColumns = []*schema.Column{
		{Name: "tank_id", Type: field.TypeInt},
		{Name: "fromTankId_id", Type: field.TypeInt},
	}
	// TankNextTanksTable holds the schema information for the "tank_nextTanks" table.
	TankNextTanksTable = &schema.Table{
		Name:       "tank_nextTanks",
		Columns:    TankNextTanksColumns,
		PrimaryKey: []*schema.Column{TankNextTanksColumns[0], TankNextTanksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "tank_nextTanks_tank_id",
				Columns: []*schema.Column{TankNextTanksColumns[0]},

				RefColumns: []*schema.Column{TanksColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "tank_nextTanks_fromTankId_id",
				Columns: []*schema.Column{TankNextTanksColumns[1]},

				RefColumns: []*schema.Column{TanksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TankPreviousTanksColumns holds the columns for the "tank_previousTanks" table.
	TankPreviousTanksColumns = []*schema.Column{
		{Name: "tank_id", Type: field.TypeInt},
		{Name: "nextTankId_id", Type: field.TypeInt},
	}
	// TankPreviousTanksTable holds the schema information for the "tank_previousTanks" table.
	TankPreviousTanksTable = &schema.Table{
		Name:       "tank_previousTanks",
		Columns:    TankPreviousTanksColumns,
		PrimaryKey: []*schema.Column{TankPreviousTanksColumns[0], TankPreviousTanksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "tank_previousTanks_tank_id",
				Columns: []*schema.Column{TankPreviousTanksColumns[0]},

				RefColumns: []*schema.Column{TanksColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "tank_previousTanks_nextTankId_id",
				Columns: []*schema.Column{TankPreviousTanksColumns[1]},

				RefColumns: []*schema.Column{TanksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TankModulesColumns holds the columns for the "tank_modules" table.
	TankModulesColumns = []*schema.Column{
		{Name: "tank_id", Type: field.TypeInt},
		{Name: "module_id", Type: field.TypeInt},
	}
	// TankModulesTable holds the schema information for the "tank_modules" table.
	TankModulesTable = &schema.Table{
		Name:       "tank_modules",
		Columns:    TankModulesColumns,
		PrimaryKey: []*schema.Column{TankModulesColumns[0], TankModulesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "tank_modules_tank_id",
				Columns: []*schema.Column{TankModulesColumns[0]},

				RefColumns: []*schema.Column{TanksColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "tank_modules_module_id",
				Columns: []*schema.Column{TankModulesColumns[1]},

				RefColumns: []*schema.Column{ModulesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ModulesTable,
		TanksTable,
		TankNextTanksTable,
		TankPreviousTanksTable,
		TankModulesTable,
	}
)

func init() {
	TankNextTanksTable.ForeignKeys[0].RefTable = TanksTable
	TankNextTanksTable.ForeignKeys[1].RefTable = TanksTable
	TankPreviousTanksTable.ForeignKeys[0].RefTable = TanksTable
	TankPreviousTanksTable.ForeignKeys[1].RefTable = TanksTable
	TankModulesTable.ForeignKeys[0].RefTable = TanksTable
	TankModulesTable.ForeignKeys[1].RefTable = ModulesTable
}
