// Code generated by entc, DO NOT EDIT.

package tank

import (
	"time"
)

const (
	// Label holds the string label denoting the tank type in the database.
	Label = "tank"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldTier holds the string denoting the tier field in the database.
	FieldTier = "tier"
	// FieldIsPremium holds the string denoting the ispremium field in the database.
	FieldIsPremium = "is_premium"
	// FieldTankClass holds the string denoting the tankclass field in the database.
	FieldTankClass = "tank_class"
	// FieldCountry holds the string denoting the country field in the database.
	FieldCountry = "country"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"

	// EdgeFromTankId holds the string denoting the fromtankid edge name in mutations.
	EdgeFromTankId = "fromTankId"
	// EdgeNextTanks holds the string denoting the nexttanks edge name in mutations.
	EdgeNextTanks = "nextTanks"
	// EdgeNextTankId holds the string denoting the nexttankid edge name in mutations.
	EdgeNextTankId = "nextTankId"
	// EdgePreviousTanks holds the string denoting the previoustanks edge name in mutations.
	EdgePreviousTanks = "previousTanks"
	// EdgeModules holds the string denoting the modules edge name in mutations.
	EdgeModules = "modules"

	// Table holds the table name of the tank in the database.
	Table = "tanks"
	// FromTankIdTable is the table the holds the fromTankId relation/edge. The primary key declared below.
	FromTankIdTable = "tank_nextTanks"
	// NextTanksTable is the table the holds the nextTanks relation/edge. The primary key declared below.
	NextTanksTable = "tank_nextTanks"
	// NextTankIdTable is the table the holds the nextTankId relation/edge. The primary key declared below.
	NextTankIdTable = "tank_previousTanks"
	// PreviousTanksTable is the table the holds the previousTanks relation/edge. The primary key declared below.
	PreviousTanksTable = "tank_previousTanks"
	// ModulesTable is the table the holds the modules relation/edge. The primary key declared below.
	ModulesTable = "tank_modules"
	// ModulesInverseTable is the table name for the Module entity.
	// It exists in this package in order to avoid circular dependency with the "module" package.
	ModulesInverseTable = "modules"
)

// Columns holds all SQL columns for tank fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldTier,
	FieldIsPremium,
	FieldTankClass,
	FieldCountry,
	FieldCreatedAt,
}

var (
	// FromTankIdPrimaryKey and FromTankIdColumn2 are the table columns denoting the
	// primary key for the fromTankId relation (M2M).
	FromTankIdPrimaryKey = []string{"tank_id", "fromTankId_id"}
	// NextTanksPrimaryKey and NextTanksColumn2 are the table columns denoting the
	// primary key for the nextTanks relation (M2M).
	NextTanksPrimaryKey = []string{"tank_id", "fromTankId_id"}
	// NextTankIdPrimaryKey and NextTankIdColumn2 are the table columns denoting the
	// primary key for the nextTankId relation (M2M).
	NextTankIdPrimaryKey = []string{"tank_id", "nextTankId_id"}
	// PreviousTanksPrimaryKey and PreviousTanksColumn2 are the table columns denoting the
	// primary key for the previousTanks relation (M2M).
	PreviousTanksPrimaryKey = []string{"tank_id", "nextTankId_id"}
	// ModulesPrimaryKey and ModulesColumn2 are the table columns denoting the
	// primary key for the modules relation (M2M).
	ModulesPrimaryKey = []string{"tank_id", "module_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultIsPremium holds the default value on creation for the isPremium field.
	DefaultIsPremium bool
	// TankClassValidator is a validator for the "tankClass" field. It is called by the builders before save.
	TankClassValidator func(string) error
	// CountryValidator is a validator for the "country" field. It is called by the builders before save.
	CountryValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the createdAt field.
	DefaultCreatedAt func() time.Time
)
